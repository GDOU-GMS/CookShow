<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- web.xml中shiro的filter对应的bean -->
    <!-- Shiro 的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/user/forwardToLogin"/>
        <!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
        <property name="unauthorizedUrl" value="/forward/customer/common/unauthorized"/>
        <!--登录成功跳转的地址，如果没有配置，shiro根据你访问的路劲进行跳转，根据需求看需不需要配置-->
        <property name="successUrl" value="/"/>
        <!--自定义Filter-->
        <property name="filters">
            <map>
                <!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中-->
                <entry key="authc" value-ref="formAuthenticationFilter" />
            </map>
        </property>
        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                /logout = logout
                /resources/** = anon
                /favicon.ico = anon
                /admin/** = anon
                /user/personCenter = authc
                /** = anon
            </value>
        </property>
    </bean>


    <!--自定义表单认证过滤器-->
    <bean id="myFormAuthenticationFilter" class="com.blueshit.cookshow.shiro.MyFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/user/forwardToLogin"/>
    </bean>

    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/user/forwardToLogin"/>
    </bean>

    <!-- securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--自定义realm-->
        <property name="realm" ref="userRealm"/>
        <!-- 注入缓存管理器 -->
<!--        <property name="cacheManager" ref="cacheManager"/>-->
        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager" />
        <!-- 记住我 -->
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- realm -->
    <bean id="userRealm" class="com.blueshit.cookshow.shiro.UserRealm">
        <!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
       <!-- &lt;!&ndash;启用缓存，默认为false&ndash;&gt;
        <property name="cachingEnabled" value="true"/>
        &lt;!&ndash;启用授权缓存&ndash;&gt;
        <property name="authorizationCachingEnabled" value="true"/>
        &lt;!&ndash;启用身份验证缓存&ndash;&gt;
        <property name="authenticationCachingEnabled" value="true"/>
        &lt;!&ndash;authenticationCache名称&ndash;&gt;
        <property name="authenticationCacheName" value="authenticationCache"/>
        &lt;!&ndash;authorizationCache名称&ndash;&gt;
        <property name="authorizationCacheName" value="authorizationCache"/>
        &lt;!&ndash;cacheManager&ndash;&gt;
        <property name="cacheManager" ref="cacheManager"/>-->
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="1" />
       <!-- <property name="storedCredentialsHexEncoded" value="true"/>-->
    </bean>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <!-- 会话管理器 -->
    <!--DefaultWebSessionManager自己维护着会话，直接废弃了Servlet容器的会话管理
        如果想使用servlet容器的会话管理要使用ServletContainerSessionManager-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">

       <!-- &lt;!&ndash;sessionIdCookie,servlet容器默认使用的它来维持会话&ndash;&gt;
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        &lt;!&ndash;是否启用sessionIdCookie&ndash;&gt;
        <property name="sessionIdCookieEnabled" value="true"/>
        &lt;!&ndash; sessionDao,对session的操作，id生成，缓存等&ndash;&gt;
        <property name="sessionDAO" ref="sessionDAO"/>
        &lt;!&ndash;会话验证调度器,用户定期验证会话是否过期&ndash;&gt;
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        &lt;!&ndash;是否开启：会话验证调度器&ndash;&gt;
        <property name="sessionValidationSchedulerEnabled" value="true"/>-->
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="7200000"/><!--默认1800000:30分钟！-->
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <!--设置Session 缓存名字， 默认就是shiro-activeSessionCache-->
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <!--sessionid生成器-->
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话ID生成器，JavaUuidSessionIdGenerator就是使用java的UUID生成id -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="maxAge" value="-1"/><!--单位为秒，默认-1 表示关闭浏览器时过期Cookie-->
        <property name="httpOnly" value="true"/><!--如果设置为true，则客户端不会暴露给客户端脚本代码-->
    </bean>

    <!-- 会话验证调度器，shiro默认使用ExecutorServiceSessionValidationScheduler-->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/><!--默认3600000L-->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!--加密rememberMe Cookie的密钥；默认AES算法；-->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie" />
    </bean>

    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie的名字 -->
        <constructor-arg value="rememberMe" />
        <property name="httpOnly" value="true"/><!--如果设置为true，则客户端不会暴露给客户端脚本代码-->
        <!-- 记住我cookie生效时间(2592000=30天) -->
        <property name="maxAge" value="2592000" />

    </bean>

    <!-- Shiro生命周期处理器-->
   <!-- <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

</beans>